# generated by datamodel-codegen:
#   filename:  data.json
#   timestamp: 2022-01-23T14:56:31+00:00

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import BaseModel, Field


class TeamLogo(BaseModel):
    size: str
    url: str


class TeamLogos(BaseModel):
    team_logo: TeamLogo


class RosterAdds(BaseModel):
    coverage_type: str
    coverage_value: str
    value: str


class Manager(BaseModel):
    # manager_id: str
    # nickname: str
    # guid: str
    is_commissioner: Optional[str] = None
    # email: str
    image_url: str
    felo_score: str
    felo_tier: str
    is_current_login: Optional[str] = None


class Managers(BaseModel):
    manager: Manager


class TeamModel(BaseModel):
    team_key: str
    team_id: str
    name: str
    url: str
    team_logos: TeamLogos
    waiver_priority: str
    number_of_moves: str
    number_of_trades: str
    roster_adds: RosterAdds
    league_scoring_type: str
    has_draft_grade: str
    managers: Managers
    is_owned_by_current_login: Optional[str] = None

class TeamsModel(BaseModel):
    __root__: List[TeamModel]

# class Teams(BaseModel):
#     _count: str = Field(..., alias='@count')
#     team: List[TeamItem]


# class TeamResponse(BaseModel):
#     league_key: str
#     league_id: str
#     name: str
#     url: str
#     logo_url: str
#     draft_status: str
#     num_teams: str
#     edit_key: str
#     weekly_deadline: str
#     league_update_timestamp: str
#     scoring_type: str
#     league_type: str
#     renew: str
#     renewed: Any
#     iris_group_chat_id: Any
#     allow_add_to_dl_extra_pos: str
#     is_pro_league: str
#     is_cash_league: str
#     start_date: str
#     end_date: str
#     game_code: str
#     season: str
#     teams: Teams
